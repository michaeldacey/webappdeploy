
name: Docker Image Build Workflow
# https://github.com/Azure/webapps-deploy#sample-workflow-to-build-and-deploy-a-nodejs-app-to-containerized-webapp-using-azure-service-principal

# Using workload identity federation to authenticate to Azure
permissions:
    id-token: write
    contents: read

env:
    AZURE_WEBAPP_NAME: mywebappkdkollc2an64c # set this to the name of your Azure Web App
    ACR_URL: myacrkdkollc2an64c.azurecr.io
    ACR_REPO: webappdeploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      # Output from this build job to the subsequent deploy job
      ACR_URL: ${{ steps.acrconfig.outputs.ACR_URL }}
      ACR_REPO: ${{ steps.acrconfig.outputs.ACR_REPO }}
    steps:
      # checkout the repo
      - name: 'Checkout Github Action'
        uses: actions/checkout@master

      # Login to Azure using Workflow Identity Federation
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
            client-id: ${{secrets.AZURE_CLIENT_ID}}
            tenant-id: ${{secrets.AZURE_TENANT_ID}}
            subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - uses: azure/docker-login@v1
        with:
            login-server: ${{ env.ACR_URL }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: The ACR server name and repo name must both be all in lower case
        id: acrconfig
        run: |
          a=$(echo $ACR_URL|tr '[:upper:]' '[:lower:]')&&echo "ACR_URL=$a" >> $GITHUB_OUTPUT
          a=$(echo $ACR_REPO|tr '[:upper:]' '[:lower:]')&&echo "ACR_REPO=$a" >> $GITHUB_OUTPUT

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.acrconfig.outputs.ACR_URL }}/${{ steps.acrconfig.outputs.ACR_REPO }}:${{ github.sha }}
          file: ./dockerfile

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: none  # We are only interested in the image in the Azure container registry

    steps:
      # Login to Azure using Workflow Identity Federation
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{secrets.AZURE_TENANT_ID}}
          subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: '${{ needs.build.outputs.ACR_URL }}/${{ needs.build.outputs.ACR_REPO }}:${{ github.sha }}'